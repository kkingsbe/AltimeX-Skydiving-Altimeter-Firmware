/*
 * LPS22HB.c
 *
 *  Created on: Jul 6, 2023
 *      Author: Kyle Kingsberry
 */
#include "LPS22HB.h"

struct LPS_CONFIG lpsConfig;

//Register map for the sensor
enum LPS_REG_MAP {
	CTRL_REG1 = 0x10,
	CTRL_REG2 = 0x11,
	CTRL_REG3 = 0x12,
	REF_P_XL = 0x15,
	REF_P_L = 0x16,
	REF_P_H = 0x17,
	STATUS_REG = 0x27,
	PRESS_OUT_XL = 0x28,
	PRESS_OUT_L = 0x29,
	PRESS_OUT_H = 0x2A,
	TEMP_OUT_L = 0x2B,
	TEMP_OUT_H = 0x2C
};


uint8_t LPS_Init(I2C_HandleTypeDef* i2c_config, uint16_t address)
{
	lpsConfig.i2c_config = i2c_config;
	lpsConfig.address = address;

	HAL_StatusTypeDef i2c_status = HAL_I2C_IsDeviceReady(i2c_config, (uint16_t)(LPS_DEFAULT_ADDRESS<<1), 3, 5);
	if(i2c_status == HAL_BUSY) {
		return 0;
	}

	uint8_t res[1];
	LPS_Reg_Read(LPS_REG_MAP.STATUS_REG, 1, res);

	return 1;
}

void LPS_Reg_Read(uint16_t reg_addr, uint16_t reg_size, uint8_t* data_output)
{
	HAL_I2C_Mem_Read(lpsConfig.i2c_config, (uint16_t)(lpsConfig.address<<1), reg_addr, 1, data_output, reg_size, 100);
}
