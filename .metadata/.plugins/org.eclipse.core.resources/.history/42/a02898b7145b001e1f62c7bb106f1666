/*
 * altimex_serial.c
 *
 *  Created on: Sep 20, 2023
 *      Author: kking
 */

#include <usb.h>

UART_HandleTypeDef* STM_USB::uart = 0; //Set STM_USB::uart to dummy value
uint8_t STM_USB::buffer[USB_BUFFER_SIZE] = {0};

void STM_USB::init(UART_HandleTypeDef* _uart)
{
	STM_USB::uart = _uart; //Set STM_USB::uart to actual value
	HAL_UART_Receive_DMA(_uart, STM_USB::buffer, USB_BUFFER_SIZE);
}

void STM_USB::printf(float data)
{
	char charData[64] = {'\0'};
	sprintf(charData, "%f", data);
	STM_USB::println(charData);
}

void STM_USB::printd(double data)
{
	char charData[64] = {'\0'};
	sprintf(charData, "%f", data);
	STM_USB::println(charData);
}

void STM_USB::print(char* data)
{
	HAL_UART_Transmit(STM_USB::uart, (const uint8_t*)data, strlen(data), 100);
}

void STM_USB::println(char* data)
{
	STM_USB::print(data);

	char newline[3] = "\r\n";
	STM_USB::print(newline);
}

static void STM_USB::readln(char* data)
{
	STM_USB::readto(data, "\n");
}

static void STM_USB::readto(char* data, char flag)
{

}

static bool STM_USB::has_buffer_overrun()
{

}

static bool STM_USB::reset_buffer_overrun()
{

}
